{"version":3,"file":"static/js/363.ff141b34.chunk.js","mappings":"kNAAaA,EAAc,SAAC,GAAD,SAAGC,MAAkBC,KAArB,E,SCC3B,EAA4B,0B,SCQ5B,EAPe,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAmD,IAAzCC,KAAAA,OAAyC,MAAlC,SAAkC,EAAxBC,EAAwB,EAAxBA,kBAC3C,OACE,mBAAQD,KAAMA,EAAME,UAAWC,EAAeC,QAASH,EAAvD,SACGF,GAGN,ECPD,GAAgB,UAAY,+BAA+B,cAAgB,mCAAmC,YAAc,iCAAiC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,4BAA4B,UAAY,gCCoDlR,EA5CmB,SAAC,GAA6C,IAA3CM,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACjD,GAA4CC,EAAAA,EAAAA,UAASF,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAaA,OACE,eAAIV,UAAWC,EAAAA,UAAf,UACE,iBAAKD,UAAWC,EAAAA,cAAhB,WAOE,gBACED,UAAWC,EAAAA,YACXU,IAAKJ,EACLK,IAAI,SACJC,MAAM,SAER,eAAIb,UAAWC,EAAAA,MAAf,SAA2BG,KAC3B,eAAGJ,UAAWC,EAAAA,OAAd,UAA2BI,EAAO,cAClC,eAAGL,UAAWC,EAAAA,UAAd,UAA8BQ,EAAe,iBAC7C,SAAC,EAAD,CACET,UAAWC,EAAAA,UACXH,KAAK,SACLC,kBA9BkB,WACxBW,GAAkB,SAAAI,GAChB,IAAMC,EAAeD,EAAqB,EAG1C,OAFAE,EAAAA,EAAAA,GAAoB,CAAEb,GAAAA,EAAIG,UAAWS,IACrCE,QAAQC,IAAIH,GACLA,CACR,GACF,EAoBK,SAIC,eAMR,EClDD,EAAgC,mCAAhC,EAA0E,0BCMpEI,EAAa,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,IAEJ,IAAMI,GAAWC,EAAAA,EAAAA,IAAY/B,GAG7B,OAFAuB,QAAQC,IAAI,IAAKM,IAGf,gBAAKxB,UAAWC,EAAhB,UAME,eAAID,UAAWC,EAAf,SACGuB,EAASE,KAAI,gBAAGvB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,OAAhC,OACZ,SAAC,EAAD,CAEEH,KAAMA,EACNC,OAAQA,EACRC,UAAWA,EACXC,OAAQA,GAJHJ,EAFK,OAYrB,EAED,IAEAgB,EAAWQ,aAAe,CACxBH,SAAU,ICxCZ,IAOA,EAPmB,WACjB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["redux/users/users-selectors.js","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx","webpack://react-homework-template/./src/modules/TweetsItem/tweets-item.module.css?91f6","modules/TweetsItem/TweetsItem.jsx","webpack://react-homework-template/./src/modules/TweetsList/tweets-list.module.css?fba5","modules/TweetsList/TweetsList.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["export const getAllUsers = ({ users }) => users.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnFollow\":\"button_btnFollow__-Bi7P\"};","import css from './button.module.css';\n\nconst Button = ({ children, type = 'submit', onChangeFollowers }) => {\n  return (\n    <button type={type} className={css.btnFollow} onClick={onChangeFollowers}>\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItems\":\"tweets-item_listItems__ctVvK\",\"containerCard\":\"tweets-item_containerCard__pF-cb\",\"imageAvatar\":\"tweets-item_imageAvatar__o3dXW\",\"logo\":\"tweets-item_logo__nK1jN\",\"title\":\"tweets-item_title__na8Sw\",\"tweets\":\"tweets-item_tweets__hUV8Y\",\"followers\":\"tweets-item_followers__ob+VT\"};","import { useState } from 'react';\n\nimport Button from 'shared/Button/Button';\n// import picture from './picture.png';\n// import logo from './logo.png';\nimport { fetchUpdateUserById } from 'redux/users/users-operations';\n\nimport css from './tweets-item.module.css';\n\nconst TweetsItem = ({ id, user, tweets, followers, avatar }) => {\n  const [usersFollowers, setUsersFollowers] = useState(followers);\n\n  // const textBtn = followers ? 'FOLLOWING' : 'FOLLOW';\n\n  const onChangeFollowers = () => {\n    setUsersFollowers(prevUsersFollowers => {\n      const followersNew = prevUsersFollowers + 1;\n      fetchUpdateUserById({ id, followers: followersNew });\n      console.log(followersNew);\n      return followersNew;\n    });\n  };\n\n  return (\n    <li className={css.listItems}>\n      <div className={css.containerCard}>\n        {/* <img className={css.logo} src={logo} alt=\"logo\" width=\"76\" />\n        <img\n          className={css.backGroundImage}\n          src={picture}\n          alt=\"pictureCheckMarkandQuestion\"\n        /> */}\n        <img\n          className={css.imageAvatar}\n          src={avatar}\n          alt=\"avatar\"\n          width=\"130\"\n        />\n        <h3 className={css.title}>{user}</h3>\n        <p className={css.tweets}>{tweets} TWEETS</p>\n        <p className={css.followers}>{usersFollowers} FOLLOWERS</p>\n        <Button\n          className={css.btnFollow}\n          type=\"button\"\n          onChangeFollowers={onChangeFollowers}\n        >\n          FOLLOW\n        </Button>\n      </div>\n    </li>\n  );\n};\n\nexport default TweetsItem;\n\n// const TweetsItem = ({ item }) => {\n//   const [usersObject, setUsersObject] = useState(item);\n//   console.log(usersObject);\n\n//   const onChangeFollowers = () => {\n//     setUsersObject(prevUserObject => {\n//       console.log(item);\n//       const followersNew = prevUserObject.followers + 1;\n//       return { ...prevUserObject, followers: followersNew };\n//     });\n//   };\n\n//   return (\n//     <li className={css.listItems}>\n//       <div className={css.containerCard}>\n//         <img className={css.logo} scr={logo} alt=\"logo\" width=\"76\" />\n//         <img\n//           className={css.backGroundImage}\n//           src={picture}\n//           alt=\"pictureCheckMarkandQuestion\"\n//         />\n//         <img src={usersObject.avatar} alt=\"avatar\" width=\"308\" />\n//         <h3 className={css.title}>{usersObject.user}</h3>\n//         <p className={css.tweets}>{usersObject.tweets} TWEETS</p>\n//         <p className={css.followers}>{usersObject.followers} FOLLOWERS</p>\n//         <Button\n//           className={css.btnFollow}\n//           type=\"button\"\n//           onChangeFollowers={onChangeFollowers}\n//         >\n//           FOLLOW\n//         </Button>\n//       </div>\n//     </li>\n//   );\n// };\n\n// export default TweetsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"listContainer\":\"tweets-list_listContainer__bHzus\",\"list\":\"tweets-list_list__eavg3\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAllUsers } from '../../redux/users/users-operations';\nimport { getAllUsers } from '../../redux/users/users-selectors';\nimport TweetsItem from 'modules/TweetsItem/TweetsItem';\nimport css from './tweets-list.module.css';\n\nconst TweetsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllUsers());\n  }, [dispatch]);\n\n  const allUsers = useSelector(getAllUsers);\n  console.log('5', allUsers);\n\n  return (\n    <div className={css.listContainer}>\n      {/* <ul className={css.list}>\n        {allUsers.map(item => (\n          <TweetsItem key={item.id} item={item} />\n        ))}\n      </ul> */}\n      <ul className={css.list}>\n        {allUsers.map(({ id, user, tweets, followers, avatar }) => (\n          <TweetsItem\n            key={id}\n            user={user}\n            tweets={tweets}\n            followers={followers}\n            avatar={avatar}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TweetsList;\n\nTweetsList.defaultProps = {\n  allUsers: [],\n};\n","import TweetsList from '../../modules/TweetsList/TweetsList';\n\nconst TweetsPage = () => {\n  return (\n    <div>\n      <TweetsList />\n    </div>\n  );\n};\nexport default TweetsPage;\n"],"names":["getAllUsers","users","items","children","type","onChangeFollowers","className","css","onClick","id","user","tweets","followers","avatar","useState","usersFollowers","setUsersFollowers","src","alt","width","prevUsersFollowers","followersNew","fetchUpdateUserById","console","log","TweetsList","dispatch","useDispatch","useEffect","fetchAllUsers","allUsers","useSelector","map","defaultProps"],"sourceRoot":""}