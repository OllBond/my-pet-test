{"version":3,"file":"static/js/426.5fbf7e46.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/shared/components/Button/button.module.css?dd0a","modules/BtnLoadMore/BtnLoadMore.jsx","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/modules/TweetsItem/tweets-item.module.css?91f6","modules/TweetsItem/TweetsItem.jsx","redux/users/users-selectors.js","webpack://react-homework-template/./src/modules/TweetsList/tweets-list.module.css?fba5","modules/TweetsList/TweetsList.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnFollow\":\"button_btnFollow__Wpn1d\",\"active\":\"button_active__r12is\"};","import css from '../../shared/components/Button/button.module.css';\n\nconst BtnLoadMore = ({ onLoadMore }) => {\n  return (\n    <button\n      type=\"button\"\n      className={css.btnFollow}\n      onClick={() => {\n        onLoadMore();\n      }}\n    >\n      Load More\n    </button>\n  );\n};\nexport default BtnLoadMore;\n","import css from './button.module.css';\n\nconst Button = ({ text, active, type = 'submit', onChangeFollowers }) => {\n  const following = active ? `${css.btnFollow} ${css.active}` : css.btnFollow;\n  return (\n    <button type={type} className={following} onClick={onChangeFollowers}>\n      {text}\n    </button>\n  );\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItems\":\"tweets-item_listItems__ctVvK\",\"containerCard\":\"tweets-item_containerCard__pF-cb\",\"imageAvatar\":\"tweets-item_imageAvatar__o3dXW\",\"userInfo\":\"tweets-item_userInfo__AjIQ5\",\"title\":\"tweets-item_title__na8Sw\",\"tweets\":\"tweets-item_tweets__hUV8Y\",\"followers\":\"tweets-item_followers__ob+VT\"};","import { useState } from 'react';\n\nimport Button from 'shared/components/Button/Button';\n// import { fetchUpdateUserById } from 'redux/users/users-operations';\n\nimport css from './tweets-item.module.css';\n\nconst TweetsItem = ({ user, tweets, followers, avatar }) => {\n  const [usersFollowers, setUsersFollowers] = useState(followers);\n  const [isFollowing, setIsFollowing] = useState(false);\n  // const textBtn = followers ? 'FOLLOWING' : 'FOLLOW';\n\n  const onChangeFollowers = () => {\n    if (isFollowing) {\n      setIsFollowing(false);\n      setUsersFollowers(prevUsersFollowers => prevUsersFollowers - 1);\n    } else {\n      setIsFollowing(true);\n      setUsersFollowers(prevUsersFollowers => prevUsersFollowers + 1);\n    }\n  };\n\n  return (\n    <li className={css.listItems}>\n      <div className={css.containerCard}>\n        <img\n          className={css.imageAvatar}\n          src={avatar}\n          alt=\"avatar\"\n          width=\"130\"\n        />\n\n        <div className={css.userInfo}>\n          <p className={css.title}>{user}</p>\n          <p className={css.tweets}>{tweets} TWEETS</p>\n          <p className={css.followers}>{usersFollowers} FOLLOWERS</p>\n          <Button\n            active={isFollowing}\n            text={isFollowing ? 'FOLLOWING' : 'FOLLOW'}\n            className={css.btnFollow}\n            type=\"button\"\n            onChangeFollowers={onChangeFollowers}\n          ></Button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TweetsItem;\n","export const getAllUsers = ({ users }) => users.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"listContainer\":\"tweets-list_listContainer__bHzus\",\"list\":\"tweets-list_list__eavg3\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport BtnLoadMore from 'modules/BtnLoadMore/BtnLoadMore';\nimport TweetsItem from 'modules/TweetsItem/TweetsItem';\nimport Loader from '../../shared/components/Loader/Loader';\n\nimport { fetchAllUsers } from '../../redux/users/users-operations';\nimport { getAllUsers } from '../../redux/users/users-selectors';\n\nimport css from './tweets-list.module.css';\n\nconst TweetsList = () => {\n  const allUsers = useSelector(getAllUsers);\n\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      setLoading(true);\n      dispatch(fetchAllUsers(page));\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [dispatch, page, error]);\n\n  const onLoadMore = () => {\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setDisplayedUsers(allUsers.slice(0, page * 3));\n  }, [allUsers, page]);\n\n  return (\n    <div className={css.listContainer}>\n      <ul className={css.list}>\n        {displayedUsers.map(({ id, user, tweets, followers, avatar }) => (\n          <TweetsItem\n            key={id}\n            user={user}\n            tweets={tweets}\n            followers={followers}\n            avatar={avatar}\n          />\n        ))}\n      </ul>\n      {loading && <Loader />}\n      <BtnLoadMore onLoadMore={onLoadMore} />\n    </div>\n  );\n};\n\nexport default TweetsList;\n\nTweetsList.defaultProps = {\n  allUsers: [],\n};\n","import TweetsList from '../../modules/TweetsList/TweetsList';\n\nconst TweetsPage = () => {\n  return (\n    <div>\n      <TweetsList />\n    </div>\n  );\n};\nexport default TweetsPage;\n"],"names":["onLoadMore","type","className","css","onClick","text","active","onChangeFollowers","following","user","tweets","followers","avatar","useState","usersFollowers","setUsersFollowers","isFollowing","setIsFollowing","src","alt","width","prevUsersFollowers","getAllUsers","users","items","TweetsList","allUsers","useSelector","displayedUsers","setDisplayedUsers","page","setPage","loading","setLoading","error","setError","dispatch","useDispatch","useEffect","fetchAllUsers","message","slice","map","id","Loader","prevPage","defaultProps"],"sourceRoot":""}